function isclass(tbl)
    if tbl and type(tbl) == "table" and tbl.is_class then
        return true
    end

    return false
end

function isinstance(tbl)
    if tbl and type(tbl) == "table" and tbl.is_instance then
        return true
    end
    return false
end

function instance(path)
    local c = require(path)
    if isclass(c) then
        return c()
    end
    return nil
end

function instancewith(path, ...)
    local c = require(path)
    if isclass(c) then
        return c(...)
    end
    return nil
end

function isclassof(subcls, basecls)
    if not isclass(subcls) or not isclass(basecls) then
        return false
    end

    return subcls:is_a(basecls)
end

function isinstanceof(instance, cls)
    if not instance or not cls then
        return false
    end

    if not isinstance(instance) or not isclass(cls) then
        return false
    end

    return instance:is_a(cls)
end

-- function unrequire(path)
--     local isPreloading = false

--     for key, _ in pairs(package.preload) do
--         if key == path then
--             package.preload[key] = nil
--             isPreloading = true
--             break
--         end
--     end

--     if not isPreloading then
--         for key, _ in pairs(package.loaded) do
--             if key == path then
--                 package.loaded[key] = nil
--                 break
--             end
--         end
--     end
-- end
